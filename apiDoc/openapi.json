{
  "openapi": "3.1.0",
  "info": {
    "title": "YON backend",
    "version": "0.1.0"
  },
  "paths": {
    "/v1/kyc/sumsub/token": {
      "post": {
        "tags": [
          "kyc"
        ],
        "summary": "Create Sumsub Sdk Token",
        "operationId": "create_sumsub_sdk_token_v1_kyc_sumsub_token_post",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SDKTokenDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/kyc/sumsub/webhook": {
      "post": {
        "tags": [
          "kyc"
        ],
        "summary": "Webhook Sumsub Handler",
        "operationId": "webhook_sumsub_handler_v1_kyc_sumsub_webhook_post",
        "parameters": [
          {
            "name": "x-payload-digest",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Payload-Digest"
            }
          },
          {
            "name": "x-payload-digest-alg",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Payload-Digest-Alg"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SumsubWebhookRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "KYC applicant not found",
            "content": {
              "application/json": {
                "examples": {
                  "KYCApplicantNotFoundException": {
                    "summary": "KYC applicant not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "KYC applicant not found",
                          "type": "KYCApplicantNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/kyc/current_user/status": {
      "get": {
        "tags": [
          "kyc"
        ],
        "summary": "My Kyc Status",
        "operationId": "my_kyc_status_v1_kyc_current_user_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KYCStatusDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "KYC applicant not found",
            "content": {
              "application/json": {
                "examples": {
                  "KYCApplicantNotFoundException": {
                    "summary": "KYC applicant not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "KYC applicant not found",
                          "type": "KYCApplicantNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/auth/phone": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth By Phone",
        "operationId": "auth_by_phone_v1_auth_phone_post",
        "parameters": [
          {
            "name": "x_forwarded_for",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X Forwarded For"
            }
          },
          {
            "name": "cf_ip_country",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cf Ip Country"
            }
          },
          {
            "name": "x_client_version",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X Client Version"
            }
          },
          {
            "name": "user_agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Agent"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthByPhoneDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenDTO"
                }
              }
            }
          },
          "429": {
            "description": "Too many OTP requests. Please try again later.",
            "content": {
              "application/json": {
                "examples": {
                  "TooManyOtpRequests": {
                    "summary": "Too many OTP requests. Please try again later.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Too many OTP requests. Please try again later.",
                          "type": "TooManyOtpRequests"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid cell phone format",
            "content": {
              "application/json": {
                "examples": {
                  "InvalidCellPhone": {
                    "summary": "Invalid cell phone format",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> cell_phone"
                          ],
                          "msg": "Invalid cell phone format",
                          "type": "InvalidCellPhone"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/validate": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Validate Phone",
        "operationId": "validate_phone_v1_auth_validate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "x_forwarded_for",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X Forwarded For"
            }
          },
          {
            "name": "cf_ip_country",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cf Ip Country"
            }
          },
          {
            "name": "x_client_version",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X Client Version"
            }
          },
          {
            "name": "user_agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Agent"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneValidateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP",
            "content": {
              "application/json": {
                "examples": {
                  "InvalidOTPException": {
                    "summary": "Invalid OTP",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Invalid OTP",
                          "type": "InvalidOTPException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many OTP attempts. Please wait before requesting a new OTP.",
            "content": {
              "application/json": {
                "examples": {
                  "TooManyOtpAttempts": {
                    "summary": "Too many OTP attempts. Please wait before requesting a new OTP.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> otp"
                          ],
                          "msg": "Too many OTP attempts. Please wait before requesting a new OTP.",
                          "type": "TooManyOtpAttempts"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout_v1_auth_logout_post",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogOutSchema"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/auth/refresh_token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh Token",
        "operationId": "refresh_token_v1_auth_refresh_token_post",
        "parameters": [
          {
            "name": "x_forwarded_for",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X Forwarded For"
            }
          },
          {
            "name": "cf_ip_country",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cf Ip Country"
            }
          },
          {
            "name": "x_client_version",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X Client Version"
            }
          },
          {
            "name": "user_agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Agent"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensSchema"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/users_to_kafka": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Publish Registered To Kafka",
        "operationId": "publish_registered_to_kafka_v1_auth_users_to_kafka_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/auth/market_maker": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Market Maker",
        "operationId": "market_maker_v1_auth_market_maker_post",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/profiles": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Profiles",
        "operationId": "profiles_v1_profiles_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search value",
              "title": "Username"
            },
            "description": "Search value"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProfilesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/current_user": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "My Profile",
        "operationId": "my_profile_v1_profile_current_user_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "profile"
        ],
        "summary": "Change Profile",
        "operationId": "change_profile_v1_profile_current_user_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No fields provided for update",
            "content": {
              "application/json": {
                "examples": {
                  "NullableValuesException": {
                    "summary": "No fields provided for update",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No fields provided for update",
                          "type": "NullableValuesException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/profile/current_user/followings/{username}": {
      "post": {
        "tags": [
          "profile"
        ],
        "summary": "Follow User",
        "operationId": "follow_user_v1_profile_current_user_followings__username__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No profile found",
            "content": {
              "application/json": {
                "examples": {
                  "ProfileNotFound": {
                    "summary": "No profile found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No profile found",
                          "type": "ProfileNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot follow yourself",
            "content": {
              "application/json": {
                "examples": {
                  "FollowSelfException": {
                    "summary": "Cannot follow yourself",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "path"
                          ],
                          "msg": "Cannot follow yourself",
                          "type": "FollowSelfException"
                        }
                      ]
                    }
                  },
                  "AlreadyFollowException": {
                    "summary": "Already following",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "path"
                          ],
                          "msg": "Already following",
                          "type": "AlreadyFollowException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "profile"
        ],
        "summary": "Unfollow User",
        "operationId": "unfollow_user_v1_profile_current_user_followings__username__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No profile found",
            "content": {
              "application/json": {
                "examples": {
                  "ProfileNotFound": {
                    "summary": "No profile found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No profile found",
                          "type": "ProfileNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/leaderboard": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Leaderboard",
        "operationId": "leaderboard_v1_profile_leaderboard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeaderboardTypeEnum",
              "default": "all_time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLeaderboardEntriesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No profile found",
            "content": {
              "application/json": {
                "examples": {
                  "ProfileNotFound": {
                    "summary": "No profile found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No profile found",
                          "type": "ProfileNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/current_user/leaderboard/position": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Leaderboard My Position",
        "operationId": "leaderboard_my_position_v1_profile_current_user_leaderboard_position_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeaderboardTypeEnum",
              "default": "all_time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/LeaderboardEntryDTO"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Leaderboard My Position V1 Profile Current User Leaderboard Position Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No profile found",
            "content": {
              "application/json": {
                "examples": {
                  "ProfileNotFound": {
                    "summary": "No profile found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No profile found",
                          "type": "ProfileNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/current_user/followings": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "My Following",
        "operationId": "my_following_v1_profile_current_user_followings_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFollowingProfilesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/current_user/followings/activity": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "My Following Activity",
        "operationId": "my_following_activity_v1_profile_current_user_followings_activity_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFollowingActivitiesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/current_user/followers": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "My Followers",
        "operationId": "my_followers_v1_profile_current_user_followers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFollowingProfilesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/{username}/followings": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "User Following",
        "operationId": "user_following_v1_profile__username__followings_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFollowingProfilesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/{username}/followers": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "User Followers",
        "operationId": "user_followers_v1_profile__username__followers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFollowingProfilesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/current_user/referral/code": {
      "post": {
        "tags": [
          "profile"
        ],
        "summary": "Activate Referral Code",
        "operationId": "activate_referral_code_v1_profile_current_user_referral_code_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralCodeRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Referral code activation expired",
            "content": {
              "application/json": {
                "examples": {
                  "ReferralCodeActivationExpiredException": {
                    "summary": "Referral code activation expired",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Referral code activation expired",
                          "type": "ReferralCodeActivationExpiredException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Referral code not found",
            "content": {
              "application/json": {
                "examples": {
                  "ReferralCodeNotFoundException": {
                    "summary": "Referral code not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Referral code not found",
                          "type": "ReferralCodeNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Referral code has already been claimed",
            "content": {
              "application/json": {
                "examples": {
                  "ReferralCodeAlreadyClaimedException": {
                    "summary": "Referral code has already been claimed",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Referral code has already been claimed",
                          "type": "ReferralCodeAlreadyClaimedException"
                        }
                      ]
                    }
                  },
                  "ReferrerLimitExceededException": {
                    "summary": "Referrer limit reached",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Referrer limit reached",
                          "type": "ReferrerLimitExceededException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "You cannot activate your own referral code",
            "content": {
              "application/json": {
                "examples": {
                  "ReferralCodeSelfActivationException": {
                    "summary": "You cannot activate your own referral code",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "You cannot activate your own referral code",
                          "type": "ReferralCodeSelfActivationException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/profile/{username}": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "User Profile",
        "operationId": "user_profile_v1_profile__username__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No profile found",
            "content": {
              "application/json": {
                "examples": {
                  "ProfileNotFound": {
                    "summary": "No profile found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No profile found",
                          "type": "ProfileNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/control-center/current_user/limits/daily-time": {
      "get": {
        "tags": [
          "control-center"
        ],
        "summary": "My Daily Time Limit",
        "operationId": "my_daily_time_limit_v1_control_center_current_user_limits_daily_time_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeLimitResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "control-center"
        ],
        "summary": "Update My Daily Time Limit",
        "operationId": "update_my_daily_time_limit_v1_control_center_current_user_limits_daily_time_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeLimitRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Daily time limit value > max value",
            "content": {
              "application/json": {
                "examples": {
                  "DailyTimeLimitMaxValueException": {
                    "summary": "Daily time limit value > max value",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> value"
                          ],
                          "msg": "Daily time limit value > max value",
                          "type": "DailyTimeLimitMaxValueException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/control-center/current_user/limits/time-off": {
      "get": {
        "tags": [
          "control-center"
        ],
        "summary": "My Time Off",
        "operationId": "my_time_off_v1_control_center_current_user_limits_time_off_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeLimitResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "control-center"
        ],
        "summary": "Update My Time Off",
        "operationId": "update_my_time_off_v1_control_center_current_user_limits_time_off_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeLimitRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/control-center/current_user/limits/investment-per-event": {
      "get": {
        "tags": [
          "control-center"
        ],
        "summary": "My Max Investment Per Event",
        "operationId": "my_max_investment_per_event_v1_control_center_current_user_limits_investment_per_event_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLimitResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "control-center"
        ],
        "summary": "Update My Max Investment Per Event",
        "operationId": "update_my_max_investment_per_event_v1_control_center_current_user_limits_investment_per_event_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceLimitRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Period is not allowed for max investment",
            "content": {
              "application/json": {
                "examples": {
                  "MaxInvestmentPeriodNotAllowedException": {
                    "summary": "Period is not allowed for max investment",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> period"
                          ],
                          "msg": "Period is not allowed for max investment",
                          "type": "MaxInvestmentPeriodNotAllowedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/control-center/current_user/limits/deposit": {
      "get": {
        "tags": [
          "control-center"
        ],
        "summary": "My Deposit Limit",
        "operationId": "my_deposit_limit_v1_control_center_current_user_limits_deposit_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BalanceLimitResponseDTO"
                  },
                  "type": "array",
                  "title": "Response My Deposit Limit V1 Control Center Current User Limits Deposit Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "control-center"
        ],
        "summary": "Update My Deposit Limit",
        "operationId": "update_my_deposit_limit_v1_control_center_current_user_limits_deposit_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BalanceLimitRequestDTO"
                },
                "type": "array",
                "title": "Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Periods duplicate",
            "content": {
              "application/json": {
                "examples": {
                  "DepositPeriodDuplicateException": {
                    "summary": "Periods duplicate",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> period"
                          ],
                          "msg": "Periods duplicate",
                          "type": "DepositPeriodDuplicateException"
                        }
                      ]
                    }
                  },
                  "DepositPeriodIsEmptyException": {
                    "summary": "Period is empty",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> period"
                          ],
                          "msg": "Period is empty",
                          "type": "DepositPeriodIsEmptyException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/banners": {
      "get": {
        "tags": [
          "banners"
        ],
        "summary": "User Banners",
        "operationId": "user_banners_v1_banners_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerResponseDTO"
                  },
                  "title": "Response User Banners V1 Banners Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  },
                  "GeoFiltersNotFoundExceptions": {
                    "summary": "No geo filters found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No geo filters found",
                          "type": "GeoFiltersNotFoundExceptions"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get All Categories",
        "operationId": "get_all_categories_v1_categories_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by `name`",
              "title": "Search Query"
            },
            "description": "Search by `name`"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriesDTO"
                  },
                  "title": "Response Get All Categories V1 Categories Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Category By Id",
        "operationId": "category_by_id_v1_categories__id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/current_user/favorite": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get User Favorite Categories",
        "operationId": "get_user_favorite_categories_v1_categories_current_user_favorite_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoriesDTO"
                  },
                  "title": "Response Get User Favorite Categories V1 Categories Current User Favorite Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No subcategories found",
            "content": {
              "application/json": {
                "examples": {
                  "SubCategoriesNotFound": {
                    "summary": "No subcategories found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No subcategories found",
                          "type": "SubCategoriesNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Add User Favorite Category",
        "operationId": "add_user_favorite_category_v1_categories_current_user_favorite_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Category already added to the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "CategoryAlreadyAdded": {
                    "summary": "Category already added to the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Category already added to the favorite list",
                          "type": "CategoryAlreadyAdded"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category does not exist",
            "content": {
              "application/json": {
                "examples": {
                  "CategoryDoesNotExist": {
                    "summary": "Category does not exist",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Category does not exist",
                          "type": "CategoryDoesNotExist"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Remove User Favorite Category",
        "operationId": "remove_user_favorite_category_v1_categories_current_user_favorite_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Category is not in the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "CategoryNotInFavoriteList": {
                    "summary": "Category is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Category is not in the favorite list",
                          "type": "CategoryNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update User Favorite Categories",
        "operationId": "update_user_favorite_categories_v1_categories_current_user_favorite_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryRequestDTO"
                },
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category does not exist",
            "content": {
              "application/json": {
                "examples": {
                  "CategoryDoesNotExist": {
                    "summary": "Category does not exist",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Category does not exist",
                          "type": "CategoryDoesNotExist"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{category_id}/subcategories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Subcategories By Category Id",
        "operationId": "get_subcategories_by_category_id_v1_categories__category_id__subcategories_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Category Id"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by `name`",
              "title": "Search Query"
            },
            "description": "Search by `name`"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubCategoriesDTO"
                  },
                  "title": "Response Get Subcategories By Category Id V1 Categories  Category Id  Subcategories Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No subcategories found",
            "content": {
              "application/json": {
                "examples": {
                  "SubCategoriesNotFound": {
                    "summary": "No subcategories found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No subcategories found",
                          "type": "SubCategoriesNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Events",
        "operationId": "events_v1_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "live",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Live"
            }
          },
          {
            "name": "coming_soon",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Coming Soon"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            },
            "example": "football"
          },
          {
            "name": "sub_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sub Category"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "geo_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Geo Filter"
            },
            "example": "global"
          },
          {
            "name": "is_favorite",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Favorite"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by `name`, `description`",
              "title": "Search Query"
            },
            "description": "Search by `name`, `description`"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/favorite": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Favorite Event",
        "operationId": "add_favorite_event_v1_events_favorite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFavoriteRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Event already added to the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "EventAlreadyAdded": {
                    "summary": "Event already added to the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event already added to the favorite list",
                          "type": "EventAlreadyAdded"
                        }
                      ]
                    }
                  },
                  "EventNotInFavoriteList": {
                    "summary": "Event is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event is not in the favorite list",
                          "type": "EventNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Delete Favorite Event",
        "operationId": "delete_favorite_event_v1_events_favorite_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFavoriteRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Event is not in the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotInFavoriteList": {
                    "summary": "Event is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event is not in the favorite list",
                          "type": "EventNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/events/{event_id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Event By Id",
        "operationId": "event_by_id_v1_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByIdResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotFoundException": {
                    "summary": "Event not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Event not found",
                          "type": "EventNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{event_id}/activity": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Activity",
        "operationId": "get_event_activity_v1_events__event_id__activity_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventOrderItemsMatchedDTO"
                  },
                  "title": "Response Get Event Activity V1 Events  Event Id  Activity Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotFoundException": {
                    "summary": "Event not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Event not found",
                          "type": "EventNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{event_id}/top_holders": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Event Top Holders",
        "operationId": "event_top_holders_v1_events__event_id__top_holders_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "range_",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Range "
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopHoldersResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotFoundException": {
                    "summary": "Event not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Event not found",
                          "type": "EventNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{event_id}/orderbook/{side}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Event Orderbook",
        "operationId": "event_orderbook_v1_events__event_id__orderbook__side__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "side",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderSideEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventOrderbookResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotFoundException": {
                    "summary": "Event not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Event not found",
                          "type": "EventNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/balance": {
      "get": {
        "tags": [
          "balance"
        ],
        "summary": "User Balance",
        "operationId": "user_balance_v1_balance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/balance/short": {
      "get": {
        "tags": [
          "balance"
        ],
        "summary": "User Short Balance",
        "operationId": "user_short_balance_v1_balance_short_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceShortResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/balance/transactions/account": {
      "get": {
        "tags": [
          "balance"
        ],
        "summary": "User Transactions",
        "operationId": "user_transactions_v1_balance_transactions_account_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTransactionsDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/balance/transactions/payments": {
      "get": {
        "tags": [
          "balance"
        ],
        "summary": "User Payments",
        "operationId": "user_payments_v1_balance_transactions_payments_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentTypeEnum"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentFilterEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTransactionsDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/balance/transactions/order/{order_id}/total": {
      "get": {
        "tags": [
          "balance"
        ],
        "summary": "Order Transactions Total",
        "operationId": "order_transactions_total_v1_balance_transactions_order__order_id__total_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionTotalDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No order transactions found",
            "content": {
              "application/json": {
                "examples": {
                  "OrderTransactionsNotFound": {
                    "summary": "No order transactions found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No order transactions found",
                          "type": "OrderTransactionsNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/balance/transactions/order/{order_id}": {
      "get": {
        "tags": [
          "balance"
        ],
        "summary": "Order Transactions",
        "operationId": "order_transactions_v1_balance_transactions_order__order_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTransactionsDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/rewards/referral": {
      "get": {
        "tags": [
          "rewards"
        ],
        "summary": "User Referral",
        "operationId": "user_referral_v1_rewards_referral_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/rewards/referral/history": {
      "get": {
        "tags": [
          "rewards"
        ],
        "summary": "Referral History",
        "operationId": "referral_history_v1_rewards_referral_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReferralHistoryDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/filters": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "Geo Filters",
        "operationId": "geo_filters_v1_filters_get",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeoFilterDTO"
                  },
                  "title": "Response Geo Filters V1 Filters Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  },
                  "GeoFiltersNotFoundExceptions": {
                    "summary": "No geo filters found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No geo filters found",
                          "type": "GeoFiltersNotFoundExceptions"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sorting": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "Sorting Options",
        "operationId": "sorting_options_v1_sorting_get",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SortingOptionsDTO"
                  },
                  "title": "Response Sorting Options V1 Sorting Get"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  },
                  "SortOptionsNotFoundExceptions": {
                    "summary": "No sort options found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "No sort options found",
                          "type": "SortOptionsNotFoundExceptions"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{event_id}/limit": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Submit Buy Limit Order",
        "operationId": "submit_buy_limit_order_v1_orders__event_id__limit_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitOrderRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to place order due to insufficient funds.",
            "content": {
              "application/json": {
                "examples": {
                  "InsufficientBalance": {
                    "summary": "Unable to place order due to insufficient funds.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> price"
                          ],
                          "msg": "Unable to place order due to insufficient funds.",
                          "type": "InsufficientBalance"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{event_id}/market": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Submit Buy Market Order",
        "operationId": "submit_buy_market_order_v1_orders__event_id__market_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketOrderRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{event_id}/exit/limit": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Submit Order Limit Exit",
        "operationId": "submit_order_limit_exit_v1_orders__event_id__exit_limit_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitOrderRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to place order due to insufficient shares count",
            "content": {
              "application/json": {
                "examples": {
                  "InsufficientSharesCount": {
                    "summary": "Unable to place order due to insufficient shares count",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> quantity"
                          ],
                          "msg": "Unable to place order due to insufficient shares count",
                          "type": "InsufficientSharesCount"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{event_id}/exit/market": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Submit Order Market Exit",
        "operationId": "submit_order_market_exit_v1_orders__event_id__exit_market_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketOrderRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to place order due to insufficient shares count",
            "content": {
              "application/json": {
                "examples": {
                  "InsufficientSharesCount": {
                    "summary": "Unable to place order due to insufficient shares count",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> quantity"
                          ],
                          "msg": "Unable to place order due to insufficient shares count",
                          "type": "InsufficientSharesCount"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{order_id}/cancel": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Order Info",
        "operationId": "order_info_v1_orders__order_id__cancel_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCancelingSchema"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "examples": {
                  "OrderNotFound": {
                    "summary": "Order not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Order not found",
                          "type": "OrderNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Order Cancel",
        "operationId": "order_cancel_v1_orders__order_id__cancel_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCancelRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No cancellable items found in this order",
            "content": {
              "application/json": {
                "examples": {
                  "NothingToCancel": {
                    "summary": "No cancellable items found in this order",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No cancellable items found in this order",
                          "type": "NothingToCancel"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{order_id}/sell_trigger": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Order Trigger Info",
        "operationId": "order_trigger_info_v1_orders__order_id__sell_trigger_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          },
          {
            "name": "type_",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TriggerTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTriggerSchema"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order trigger not found",
            "content": {
              "application/json": {
                "examples": {
                  "OrderTriggerNotFound": {
                    "summary": "Order trigger not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Order trigger not found",
                          "type": "OrderTriggerNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "orders"
        ],
        "summary": "Order Stop Loss Update",
        "operationId": "order_stop_loss_update_v1_orders__order_id__sell_trigger_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          },
          {
            "name": "type_",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TriggerTypeEnum"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTriggerUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order trigger not found",
            "content": {
              "application/json": {
                "examples": {
                  "OrderTriggerNotFound": {
                    "summary": "Order trigger not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Order trigger not found",
                          "type": "OrderTriggerNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Trigger price exceeds allowed range",
            "content": {
              "application/json": {
                "examples": {
                  "TriggerPriceOutOfRange": {
                    "summary": "Trigger price exceeds allowed range",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> price"
                          ],
                          "msg": "Trigger price exceeds allowed range",
                          "type": "TriggerPriceOutOfRange"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Order Stop Loss Cancel",
        "operationId": "order_stop_loss_cancel_v1_orders__order_id__sell_trigger_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          },
          {
            "name": "type_",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TriggerTypeEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order trigger not found",
            "content": {
              "application/json": {
                "examples": {
                  "OrderTriggerNotFound": {
                    "summary": "Order trigger not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Order trigger not found",
                          "type": "OrderTriggerNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{order_id}/auto_cancel": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Order Auto Cancel Info",
        "operationId": "order_auto_cancel_info_v1_orders__order_id__auto_cancel_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoCancelSchema"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Auto cancel not found",
            "content": {
              "application/json": {
                "examples": {
                  "AutoCancelNotFound": {
                    "summary": "Auto cancel not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Auto cancel not found",
                          "type": "AutoCancelNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "orders"
        ],
        "summary": "Order Auto Cancel Update",
        "operationId": "order_auto_cancel_update_v1_orders__order_id__auto_cancel_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoCancelUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Auto-cancel timeout cannot be set after event ends",
            "content": {
              "application/json": {
                "examples": {
                  "TimeoutAfterEventEnd": {
                    "summary": "Auto-cancel timeout cannot be set after event ends",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body -> timeout_at"
                          ],
                          "msg": "Auto-cancel timeout cannot be set after event ends",
                          "type": "TimeoutAfterEventEnd"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Order Auto Cancel Cancel",
        "operationId": "order_auto_cancel_cancel_v1_orders__order_id__auto_cancel_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/topics": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Topics",
        "operationId": "topics_v1_topics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "is_favorite",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Favorite"
            }
          },
          {
            "name": "live",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Live"
            }
          },
          {
            "name": "promoted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Promoted"
            }
          },
          {
            "name": "coming_soon",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Coming Soon"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            },
            "example": "football"
          },
          {
            "name": "sub_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sub Category"
            }
          },
          {
            "name": "geo_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Geo Filter"
            },
            "example": "global"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTopicResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/topics/favorite": {
      "post": {
        "tags": [
          "topics"
        ],
        "summary": "Add Favorite Topic",
        "operationId": "add_favorite_topic_v1_topics_favorite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicFavoriteRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Event already added to the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "EventAlreadyAdded": {
                    "summary": "Event already added to the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event already added to the favorite list",
                          "type": "EventAlreadyAdded"
                        }
                      ]
                    }
                  },
                  "EventNotInFavoriteList": {
                    "summary": "Event is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event is not in the favorite list",
                          "type": "EventNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "topics"
        ],
        "summary": "Delete Favorite Topic",
        "operationId": "delete_favorite_topic_v1_topics_favorite_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicFavoriteRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Event is not in the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotInFavoriteList": {
                    "summary": "Event is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event is not in the favorite list",
                          "type": "EventNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/topics/{topic_id}": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Topic By Id",
        "operationId": "topic_by_id_v1_topics__topic_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No topic found",
            "content": {
              "application/json": {
                "examples": {
                  "TopicNotFoundException": {
                    "summary": "No topic found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No topic found",
                          "type": "TopicNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/topics/{topic_id}/events": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Events By Topic",
        "operationId": "events_by_topic_v1_topics__topic_id__events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Section"
            }
          },
          {
            "name": "is_favorite",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Favorite"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/topics/{topic_id}/sections": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Event Sections",
        "operationId": "event_sections_v1_topics__topic_id__sections_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicSectionsDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/portfolio/events/favorite": {
      "post": {
        "tags": [
          "portfolio"
        ],
        "summary": "Add Favorite Event",
        "operationId": "add_favorite_event_v1_portfolio_events_favorite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFavoriteRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Event already added to the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "EventAlreadyAdded": {
                    "summary": "Event already added to the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event already added to the favorite list",
                          "type": "EventAlreadyAdded"
                        }
                      ]
                    }
                  },
                  "EventNotInFavoriteList": {
                    "summary": "Event is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event is not in the favorite list",
                          "type": "EventNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "portfolio"
        ],
        "summary": "Delete Favorite Event",
        "operationId": "delete_favorite_event_v1_portfolio_events_favorite_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFavoriteRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Event is not in the favorite list",
            "content": {
              "application/json": {
                "examples": {
                  "EventNotInFavoriteList": {
                    "summary": "Event is not in the favorite list",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "body"
                          ],
                          "msg": "Event is not in the favorite list",
                          "type": "EventNotInFavoriteList"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/portfolio/events": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "Portfolio Picks By Type",
        "operationId": "portfolio_picks_by_type_v1_portfolio_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderStatusEnum-Input"
            }
          },
          {
            "name": "picks_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PicksTypeEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPortfolioEventsSchemaDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/portfolio/events/summary": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "Events Summary By Type",
        "operationId": "events_summary_by_type_v1_portfolio_events_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "picks_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PicksTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivePicksSummaryDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/portfolio/events/{event_id}": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "Portfolio Event",
        "operationId": "portfolio_event_v1_portfolio_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Client's preferred language(s)",
              "example": "en-US,en;q=0.9",
              "title": "Accept-Language"
            },
            "description": "Client's preferred language(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioEventSchemaDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No event data found",
            "content": {
              "application/json": {
                "examples": {
                  "PortfolioEventNotFound": {
                    "summary": "No event data found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No event data found",
                          "type": "PortfolioEventNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/portfolio/events/{event_id}/stats": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "Event Stats By Side",
        "operationId": "event_stats_by_side_v1_portfolio_events__event_id__stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderStatusEnum-Input"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderSideEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioOrdersSideStatsDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No event data found",
            "content": {
              "application/json": {
                "examples": {
                  "PortfolioEventNotFound": {
                    "summary": "No event data found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No event data found",
                          "type": "PortfolioEventNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/portfolio/events/{event_id}/orders": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "Orders By Side",
        "operationId": "orders_by_side_v1_portfolio_events__event_id__orders_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderStatusEnum-Input"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderSideEnum"
            }
          },
          {
            "name": "triggers",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderTriggersEnum"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Triggers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPortfolioEventOrdersDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No event data found",
            "content": {
              "application/json": {
                "examples": {
                  "PortfolioEventNotFound": {
                    "summary": "No event data found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "No event data found",
                          "type": "PortfolioEventNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/grant_admin": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Grant Admin",
        "operationId": "grant_admin_v1_admin_users__user_id__grant_admin_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/revoke_admin": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Revoke Admin",
        "operationId": "revoke_admin_v1_admin_users__user_id__revoke_admin_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFoundException": {
                    "summary": "User not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "User not found",
                          "type": "UserNotFoundException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/top_up": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Balance Top Up",
        "operationId": "balance_top_up_v1_admin_users__user_id__top_up_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Users",
        "operationId": "get_users_v1_admin_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserAdminResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users/{user_id}/orders": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Users Orders",
        "operationId": "get_users_orders_v1_admin_users__user_id__orders_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrderAdminResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/orders": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Orders",
        "operationId": "get_orders_v1_admin_orders_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrderAdminResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/orders/{order_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Order",
        "operationId": "get_order_v1_admin_orders__order_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminPortfolioOrderSchema"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token.",
            "content": {
              "application/json": {
                "examples": {
                  "UnauthorizedException": {
                    "summary": "Missing or invalid authentication token.",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Missing or invalid authentication token.",
                          "type": "UnauthorizedException"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "examples": {
                  "OrderNotFound": {
                    "summary": "Order not found",
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            ""
                          ],
                          "msg": "Order not found",
                          "type": "OrderNotFound"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health/liveness": {
      "get": {
        "tags": [
          "Healthchecks"
        ],
        "summary": "Liveness Check",
        "operationId": "liveness_check_health_liveness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Liveness Check Health Liveness Get"
                }
              }
            }
          }
        }
      }
    },
    "/health/readiness": {
      "get": {
        "tags": [
          "Healthchecks"
        ],
        "summary": "Readiness Check",
        "operationId": "readiness_check_health_readiness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivePicksSummaryDTO": {
        "properties": {
          "total_invested": {
            "$ref": "#/components/schemas/TotalInvested",
            "description": "Summary of all invested funds breakdown"
          },
          "live_profit": {
            "$ref": "#/components/schemas/LiveProfit",
            "description": "Current live profit/loss information for active picks"
          },
          "exit_profit": {
            "$ref": "#/components/schemas/ExitProfit",
            "description": "Profit information from positions closed before resolution"
          },
          "potential_profit": {
            "$ref": "#/components/schemas/PotentialProfit",
            "description": "Potential profit if all active positions win"
          }
        },
        "type": "object",
        "required": [
          "total_invested",
          "live_profit",
          "exit_profit",
          "potential_profit"
        ],
        "title": "ActivePicksSummaryDTO"
      },
      "AdminPortfolioOrderSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Event start date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum"
          },
          "type": {
            "$ref": "#/components/schemas/OrderKindEnum"
          },
          "requested_items_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested Items Quantity"
          },
          "executed_items_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Executed Items Quantity"
          },
          "requested_max_inv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested Max Inv"
          },
          "executed_max_inv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Executed Max Inv"
          },
          "investment": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Investment"
          },
          "invested": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invested"
          },
          "current_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Value"
          },
          "live_profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Profit"
          },
          "auto_cancel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoCancelSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderTriggerSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderTriggerSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "slippage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slippage"
          },
          "selling_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selling Price"
          },
          "potential_profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Potential Profit"
          },
          "avg_exit_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Exit Price"
          },
          "unfilled": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unfilled"
          },
          "matched_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matched Quantity"
          },
          "matching": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MarketOrderTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profit"
          },
          "cancelled": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CancelTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "start_date",
          "end_date",
          "side",
          "type"
        ],
        "title": "AdminPortfolioOrderSchema"
      },
      "AuthByPhoneDTO": {
        "properties": {
          "cell_phone": {
            "type": "string",
            "title": "Cell Phone",
            "examples": [
              "88005553535"
            ]
          },
          "country": {
            "type": "string",
            "title": "Country",
            "examples": [
              "RU"
            ]
          }
        },
        "type": "object",
        "required": [
          "cell_phone",
          "country"
        ],
        "title": "AuthByPhoneDTO"
      },
      "AuthTokensSchema": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "refresh_token"
        ],
        "title": "AuthTokensSchema",
        "examples": [
          {
            "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNzJlODJiMC04YWMzLTQ4OTgtOGJmNi04ZmNkMzY3ZDY2MTUiLCJpc3MiOiJ5b24tYXV0aCIsImF1ZCI6Inlvbi1hdXRoIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiIsImp0aSI6ImFhNDhmNzYxLTU0NmEtANDUyYy1hYTY4LTU4NzZhYjczNDM3NCIsImlhdCI6MTc1MjM1ODMzNSwiZXhwIjoxNzUyNDQ0NzM1LCJjaGFubmVscyI6WyJhdXRoI2E3MmU4MmIwLThhYzMtNDg5OC04YmY2LThemY2QzNjdkNjYxNSIsIm5vdGlmaWNhdGlvbiNhNzJlODJiMC04YWMzLTQ4OTgtOGJmNi04ZmNkMzY3ZDY2MTUiXX0.OU1q5LkROqEJpSliYuJs7ufwJyPw1q0sLKyCCM3Eo0c",
            "expires_in": 86400,
            "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNzJlODJiMC04YWMzLTQ4OTgtOGJmNi04ZmNkMzY3ZDY2MTUiLCJpc3MiOiJ5b24tYXV0aCIsImF1ZCI6Inlvbi1hdXRoIiwidG9rZW5fdHlwZSI6InJlZnJlc2hfdG9rZW4iLCJqdGkiOiJhYTQ4Zjc2MS01ANDZhLTQ1MmMtYWE2OC01ODc2YWI3MzQzNzQiLCJpYXQiOjE3NTIzNTgzMzUsImV4cCI6MTc1MzY1ANDMzNX0.Z_W8eMuchYXJHCMO8L3P3UKo_0FlSW_hGbhqiSo8fDDA",
            "token_type": "Bearer"
          }
        ]
      },
      "AutoCancelDTO": {
        "properties": {
          "timeout": {
            "type": "integer",
            "title": "Timeout",
            "description": "Cancel the order if not matched within the specified number of seconds",
            "examples": [
              120,
              180
            ]
          }
        },
        "type": "object",
        "required": [
          "timeout"
        ],
        "title": "AutoCancelDTO"
      },
      "AutoCancelSchema": {
        "properties": {
          "order_id": {
            "type": "string",
            "format": "uuid",
            "title": "Order Id"
          },
          "timeout_at": {
            "type": "string",
            "format": "date-time",
            "title": "Timeout At"
          },
          "status": {
            "$ref": "#/components/schemas/AutoCancelStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "timeout_at",
          "status"
        ],
        "title": "AutoCancelSchema"
      },
      "AutoCancelStatusEnum": {
        "type": "string",
        "enum": [
          "pending",
          "settled",
          "failed",
          "canceled",
          "voided",
          "executed"
        ],
        "title": "AutoCancelStatusEnum"
      },
      "AutoCancelUpdateSchema": {
        "properties": {
          "timeout_at": {
            "type": "string",
            "format": "date-time",
            "title": "Timeout At"
          }
        },
        "type": "object",
        "required": [
          "timeout_at"
        ],
        "title": "AutoCancelUpdateSchema"
      },
      "BalanceLimitRequestDTO": {
        "properties": {
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "daily",
                  "weekly",
                  "monthly"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Period"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          }
        },
        "type": "object",
        "required": [
          "value",
          "is_enabled"
        ],
        "title": "BalanceLimitRequestDTO"
      },
      "BalanceLimitResponseDTO": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "daily",
                  "weekly",
                  "monthly"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Period"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          }
        },
        "type": "object",
        "required": [
          "is_enabled"
        ],
        "title": "BalanceLimitResponseDTO"
      },
      "BalanceRequestDTO": {
        "properties": {
          "amount": {
            "type": "integer",
            "title": "Amount",
            "examples": [
              100
            ]
          }
        },
        "type": "object",
        "required": [
          "amount"
        ],
        "title": "BalanceRequestDTO"
      },
      "BalanceResponseDTO": {
        "properties": {
          "real_amount": {
            "type": "integer",
            "title": "Real Amount"
          },
          "promo_amount": {
            "type": "integer",
            "title": "Promo Amount"
          },
          "invested": {
            "type": "integer",
            "title": "Invested"
          },
          "unmatched": {
            "type": "integer",
            "title": "Unmatched"
          },
          "withdraw": {
            "type": "integer",
            "title": "Withdraw"
          },
          "coins": {
            "type": "integer",
            "title": "Coins"
          }
        },
        "type": "object",
        "required": [
          "real_amount",
          "promo_amount",
          "invested",
          "unmatched",
          "withdraw",
          "coins"
        ],
        "title": "BalanceResponseDTO"
      },
      "BalanceShortResponseDTO": {
        "properties": {
          "real_amount": {
            "type": "integer",
            "title": "Real Amount"
          },
          "promo_amount": {
            "type": "integer",
            "title": "Promo Amount"
          }
        },
        "type": "object",
        "required": [
          "real_amount",
          "promo_amount"
        ],
        "title": "BalanceShortResponseDTO"
      },
      "BannerResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "logo_url": {
            "type": "string",
            "title": "Logo Url"
          },
          "app_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Url"
          },
          "web_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Web Url"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "type": "object",
        "required": [
          "id",
          "logo_url"
        ],
        "title": "BannerResponseDTO"
      },
      "BaseProfileDTO": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "examples": [
              "johny"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "John Smith"
            ]
          },
          "avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar",
            "examples": [
              "https://example.com/avatar.jpg"
            ]
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "examples": [
              "Johny the trader"
            ]
          }
        },
        "type": "object",
        "required": [
          "username",
          "name"
        ],
        "title": "BaseProfileDTO"
      },
      "CancelTypeEnum": {
        "type": "string",
        "enum": [
          "auto",
          "manual"
        ],
        "title": "CancelTypeEnum"
      },
      "CategoriesDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "banner_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Banner Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "logo_url",
          "banner_url"
        ],
        "title": "CategoriesDTO"
      },
      "CategoryRequestDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "examples": [
              "football"
            ]
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CategoryRequestDTO"
      },
      "EntityTypeEnum": {
        "type": "string",
        "enum": [
          "order",
          "payment"
        ],
        "title": "EntityTypeEnum"
      },
      "EventByIdResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "sub_categories": {
            "items": {
              "$ref": "#/components/schemas/SubCategoriesDTO"
            },
            "type": "array",
            "title": "Sub Categories"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "yes_price": {
            "type": "integer",
            "title": "Yes Price"
          },
          "no_price": {
            "type": "integer",
            "title": "No Price"
          },
          "is_live": {
            "type": "boolean",
            "title": "Is Live"
          },
          "yes_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yes Text"
          },
          "no_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Text"
          },
          "trading_volume": {
            "type": "integer",
            "title": "Trading Volume"
          },
          "category_logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Logo Url"
          },
          "topic": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TopicShortResponseDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "participants": {
            "type": "integer",
            "title": "Participants"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "category_name",
          "sub_categories",
          "start_date",
          "is_favorite",
          "yes_price",
          "no_price",
          "is_live",
          "trading_volume",
          "participants"
        ],
        "title": "EventByIdResponseDTO"
      },
      "EventFavoriteRequestDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "examples": [
              "S56"
            ]
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "EventFavoriteRequestDTO"
      },
      "EventOrderItemsMatchedDTO": {
        "properties": {
          "yes": {
            "$ref": "#/components/schemas/OrderItemMatchedInfoDTO"
          },
          "no": {
            "$ref": "#/components/schemas/OrderItemMatchedInfoDTO"
          },
          "matching_time": {
            "type": "string",
            "format": "date-time",
            "title": "Matching Time"
          }
        },
        "type": "object",
        "required": [
          "yes",
          "no",
          "matching_time"
        ],
        "title": "EventOrderItemsMatchedDTO"
      },
      "EventOrderbookResponseDTO": {
        "properties": {
          "array": {
            "items": {
              "prefixItems": [
                {
                  "type": "integer"
                },
                {
                  "type": "integer"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2,
              "description": "[price, quantity]"
            },
            "type": "array",
            "title": "Array",
            "examples": [
              [
                [
                  72,
                  4
                ],
                [
                  65,
                  3
                ],
                [
                  55,
                  200
                ]
              ]
            ]
          },
          "channel": {
            "type": "string",
            "title": "Channel",
            "description": "Websocket key"
          }
        },
        "type": "object",
        "required": [
          "array",
          "channel"
        ],
        "title": "EventOrderbookResponseDTO"
      },
      "EventResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "sub_categories": {
            "items": {
              "$ref": "#/components/schemas/SubCategoriesDTO"
            },
            "type": "array",
            "title": "Sub Categories"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "yes_price": {
            "type": "integer",
            "title": "Yes Price"
          },
          "no_price": {
            "type": "integer",
            "title": "No Price"
          },
          "is_live": {
            "type": "boolean",
            "title": "Is Live"
          },
          "yes_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yes Text"
          },
          "no_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Text"
          },
          "trading_volume": {
            "type": "integer",
            "title": "Trading Volume"
          },
          "category_logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Logo Url"
          },
          "topic": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TopicShortResponseDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "category_name",
          "sub_categories",
          "start_date",
          "is_favorite",
          "yes_price",
          "no_price",
          "is_live",
          "trading_volume"
        ],
        "title": "EventResponseDTO"
      },
      "ExitProfit": {
        "properties": {
          "exit_profit": {
            "type": "integer",
            "title": "Exit Profit",
            "description": "Total profit from exited positions before resolution"
          },
          "sold_quantity": {
            "type": "integer",
            "title": "Sold Quantity",
            "description": "Number of shares sold before event resolution"
          },
          "platform_fee": {
            "type": "integer",
            "title": "Platform Fee",
            "description": "Platform fees charged for exited picks"
          }
        },
        "type": "object",
        "required": [
          "exit_profit",
          "sold_quantity",
          "platform_fee"
        ],
        "title": "ExitProfit"
      },
      "FollowingActivityDTO": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "examples": [
              "johny"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatusEnum-Output",
            "description": "Temporary mock - `Matched`"
          },
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "username",
          "name",
          "status",
          "side",
          "quantity",
          "price",
          "date"
        ],
        "title": "FollowingActivityDTO"
      },
      "FollowingProfileDTO": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "examples": [
              "johny"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "John Smith"
            ]
          },
          "avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar",
            "examples": [
              "https://example.com/avatar.jpg"
            ]
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "examples": [
              "Johny the trader"
            ]
          },
          "is_following": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Following"
          }
        },
        "type": "object",
        "required": [
          "username",
          "name"
        ],
        "title": "FollowingProfileDTO"
      },
      "GeoFilterDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "GeoFilterDTO"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "KYCStatusDTO": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/KYCStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "KYCStatusDTO"
      },
      "KYCStatusEnum": {
        "type": "string",
        "enum": [
          "not_started",
          "in_progress",
          "on_review",
          "awaiting_user",
          "completed",
          "expired"
        ],
        "title": "KYCStatusEnum"
      },
      "LeaderboardEntryDTO": {
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/BaseProfileDTO"
          },
          "profit": {
            "type": "number",
            "title": "Profit"
          },
          "place": {
            "type": "integer",
            "title": "Place"
          }
        },
        "type": "object",
        "required": [
          "profile",
          "profit",
          "place"
        ],
        "title": "LeaderboardEntryDTO"
      },
      "LeaderboardTypeEnum": {
        "type": "string",
        "enum": [
          "all_time",
          "weekly",
          "monthly"
        ],
        "title": "LeaderboardTypeEnum"
      },
      "LimitOrderRequestDTO": {
        "properties": {
          "ik": {
            "type": "string",
            "format": "uuid",
            "title": "Ik",
            "description": "Client-generated idempotency key — must be a unique random string per request",
            "examples": [
              "dce40dee-a6e6-4d27-8fb2-ed89d4aa23a5"
            ]
          },
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum",
            "description": "Order side: YES (buying a 'Yes' contract) or NO (buying a 'No' contract)"
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TakeProfitDTO"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional: parameters for automatically taking profit"
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TakeProfitDTO"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional: parameters for automatically stopping losses"
          },
          "auto_cancel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoCancelDTO"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional: settings for automatically canceling the order after a delay"
          },
          "price": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Price",
            "description": "Price at which the order should be placed"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Quantity",
            "description": "Number of contracts in the order"
          },
          "slippage": {
            "type": "integer",
            "title": "Slippage"
          }
        },
        "type": "object",
        "required": [
          "ik",
          "side",
          "price",
          "quantity",
          "slippage"
        ],
        "title": "LimitOrderRequestDTO"
      },
      "LiveProfit": {
        "properties": {
          "live_profit": {
            "type": "integer",
            "title": "Live Profit",
            "description": "Current unrealized profit based on market price"
          },
          "investment": {
            "type": "integer",
            "title": "Investment",
            "description": "Amount of funds invested in events"
          },
          "current_value": {
            "type": "integer",
            "title": "Current Value",
            "description": "Current market value of bought shares"
          }
        },
        "type": "object",
        "required": [
          "live_profit",
          "investment",
          "current_value"
        ],
        "title": "LiveProfit"
      },
      "LogOutSchema": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "LogOutSchema",
        "examples": [
          {
            "access_token": "Logged out"
          }
        ]
      },
      "MarketOrderRequestDTO": {
        "properties": {
          "ik": {
            "type": "string",
            "format": "uuid",
            "title": "Ik",
            "description": "Client-generated idempotency key — must be a unique random string per request",
            "examples": [
              "dce40dee-a6e6-4d27-8fb2-ed89d4aa23a5"
            ]
          },
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum",
            "description": "Order side: YES (buying a 'Yes' contract) or NO (buying a 'No' contract)"
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TakeProfitDTO"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional: parameters for automatically taking profit"
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TakeProfitDTO"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional: parameters for automatically stopping losses"
          },
          "auto_cancel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoCancelDTO"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional: settings for automatically canceling the order after a delay"
          },
          "max_investment": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Investment"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "ik",
          "side"
        ],
        "title": "MarketOrderRequestDTO"
      },
      "MarketOrderTypeEnum": {
        "type": "string",
        "enum": [
          "quantity",
          "max_investment"
        ],
        "title": "MarketOrderTypeEnum"
      },
      "MatchedFunds": {
        "properties": {
          "real": {
            "type": "integer",
            "title": "Real",
            "description": "Real funds settled in matched orders"
          },
          "promo": {
            "type": "integer",
            "title": "Promo",
            "description": "Bonus funds settled in matched orders"
          },
          "matched": {
            "type": "integer",
            "title": "Matched",
            "description": "Total amount of funds settled in matched orders"
          }
        },
        "type": "object",
        "required": [
          "real",
          "promo",
          "matched"
        ],
        "title": "MatchedFunds"
      },
      "OrderAdminResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "type": {
            "$ref": "#/components/schemas/OrderTypeEnum"
          },
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum"
          },
          "event_id": {
            "type": "string",
            "title": "Event Id"
          },
          "requested_items_quantity": {
            "type": "integer",
            "title": "Requested Items Quantity"
          },
          "requested_max_inv": {
            "type": "integer",
            "title": "Requested Max Inv"
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "slippage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slippage"
          },
          "matching": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MarketOrderTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "auto_cancel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoCancelSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderTriggerSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderTriggerSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "type",
          "side",
          "event_id",
          "requested_items_quantity",
          "requested_max_inv",
          "matching"
        ],
        "title": "OrderAdminResponseDTO"
      },
      "OrderCancelEnum": {
        "type": "string",
        "enum": [
          "exiting",
          "unmatched"
        ],
        "title": "OrderCancelEnum"
      },
      "OrderCancelRequestDTO": {
        "properties": {
          "cancel": {
            "$ref": "#/components/schemas/OrderCancelEnum"
          },
          "ik": {
            "type": "string",
            "format": "uuid",
            "title": "Ik"
          }
        },
        "type": "object",
        "required": [
          "cancel",
          "ik"
        ],
        "title": "OrderCancelRequestDTO"
      },
      "OrderCancelingSchema": {
        "properties": {
          "unmatched": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PendingShares"
              },
              {
                "type": "null"
              }
            ]
          },
          "exiting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PendingShares"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "unmatched",
          "exiting"
        ],
        "title": "OrderCancelingSchema"
      },
      "OrderItemMatchedInfoDTO": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "username",
          "price"
        ],
        "title": "OrderItemMatchedInfoDTO"
      },
      "OrderKindEnum": {
        "type": "string",
        "enum": [
          "limit",
          "market"
        ],
        "title": "OrderKindEnum"
      },
      "OrderRequestDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "OrderRequestDTO"
      },
      "OrderSideEnum": {
        "type": "string",
        "enum": [
          "yes",
          "no"
        ],
        "title": "OrderSideEnum"
      },
      "OrderStatusEnum-Input": {
        "type": "string",
        "enum": [
          "matched",
          "unmatched",
          "exiting",
          "exited",
          "canceled",
          "all"
        ],
        "title": "OrderStatusEnum"
      },
      "OrderStatusEnum-Output": {
        "type": "string",
        "enum": [
          "request",
          "pre_confirmed",
          "exiting_pre_confirmed",
          "exiting_unconfirmed",
          "exiting",
          "unconfirmed",
          "matched",
          "unmatched",
          "exited",
          "partially_matched",
          "result"
        ],
        "title": "OrderStatusEnum"
      },
      "OrderTransactionTotalDTO": {
        "properties": {
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "promo_amount": {
            "type": "integer",
            "title": "Promo Amount"
          },
          "real_amount": {
            "type": "integer",
            "title": "Real Amount"
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "name",
          "promo_amount",
          "real_amount",
          "label"
        ],
        "title": "OrderTransactionTotalDTO"
      },
      "OrderTriggerSchema": {
        "properties": {
          "order_id": {
            "type": "string",
            "format": "uuid",
            "title": "Order Id"
          },
          "type": {
            "$ref": "#/components/schemas/TriggerTypeEnum"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "status": {
            "$ref": "#/components/schemas/AutoCancelStatusEnum"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "type",
          "price",
          "status"
        ],
        "title": "OrderTriggerSchema"
      },
      "OrderTriggerUpdateSchema": {
        "properties": {
          "price": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "price"
        ],
        "title": "OrderTriggerUpdateSchema"
      },
      "OrderTriggersEnum": {
        "type": "string",
        "enum": [
          "take_profit",
          "stop_loss",
          "auto_cancel"
        ],
        "title": "OrderTriggersEnum"
      },
      "OrderTypeEnum": {
        "type": "string",
        "enum": [
          "limit",
          "quantity",
          "max_investment"
        ],
        "title": "OrderTypeEnum"
      },
      "PaginatedEventResponseDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/EventResponseDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedEventResponseDTO"
      },
      "PaginatedFollowingActivitiesDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/FollowingActivityDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedFollowingActivitiesDTO"
      },
      "PaginatedFollowingProfilesDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/FollowingProfileDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedFollowingProfilesDTO"
      },
      "PaginatedLeaderboardEntriesDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/LeaderboardEntryDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedLeaderboardEntriesDTO"
      },
      "PaginatedOrderAdminResponseDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/OrderAdminResponseDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedOrderAdminResponseDTO"
      },
      "PaginatedPortfolioEventOrdersDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/PortfolioOrderSchema"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedPortfolioEventOrdersDTO"
      },
      "PaginatedPortfolioEventsSchemaDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/PortfolioEventSearchSchema"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedPortfolioEventsSchemaDTO"
      },
      "PaginatedProfilesDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/ProfileDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedProfilesDTO"
      },
      "PaginatedReferralHistoryDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/ReferralHistoryDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedReferralHistoryDTO"
      },
      "PaginatedTopicResponseDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/TopicSearchResponseDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedTopicResponseDTO"
      },
      "PaginatedTransactionsDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/TransactionDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedTransactionsDTO"
      },
      "PaginatedUserAdminResponseDTO": {
        "properties": {
          "array": {
            "items": {
              "$ref": "#/components/schemas/UserAdminResponseDTO"
            },
            "type": "array",
            "title": "Array"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "array",
          "page",
          "per_page",
          "total_pages",
          "total"
        ],
        "title": "PaginatedUserAdminResponseDTO"
      },
      "PaymentFilterEnum": {
        "type": "string",
        "enum": [
          "all",
          "success",
          "pending",
          "failed"
        ],
        "title": "PaymentFilterEnum"
      },
      "PaymentTypeEnum": {
        "type": "string",
        "enum": [
          "deposit",
          "withdrawals"
        ],
        "title": "PaymentTypeEnum"
      },
      "PendingShares": {
        "properties": {
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "side",
          "quantity"
        ],
        "title": "PendingShares"
      },
      "PhoneValidateDTO": {
        "properties": {
          "otp": {
            "type": "string",
            "title": "Otp",
            "examples": [
              "1222"
            ]
          }
        },
        "type": "object",
        "required": [
          "otp"
        ],
        "title": "PhoneValidateDTO"
      },
      "PicksTypeEnum": {
        "type": "string",
        "enum": [
          "active",
          "resolved",
          "favorites"
        ],
        "title": "PicksTypeEnum"
      },
      "PortfolioEventSchemaDTO": {
        "properties": {
          "total_invested": {
            "$ref": "#/components/schemas/TotalInvested",
            "description": "Summary of all invested funds breakdown"
          },
          "live_profit": {
            "$ref": "#/components/schemas/LiveProfit",
            "description": "Current live profit/loss information for active picks"
          },
          "exit_profit": {
            "$ref": "#/components/schemas/ExitProfit",
            "description": "Profit information from positions closed before resolution"
          },
          "potential_profit": {
            "$ref": "#/components/schemas/PotentialProfit",
            "description": "Potential profit if all active positions win"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Event ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Event name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Event description"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Event start date"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "Event logo URL"
          },
          "result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "predict": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProbabilitySchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "total_invested",
          "live_profit",
          "exit_profit",
          "potential_profit",
          "id",
          "name",
          "description",
          "start_date"
        ],
        "title": "PortfolioEventSchemaDTO"
      },
      "PortfolioEventSearchSchema": {
        "properties": {
          "total_invested": {
            "$ref": "#/components/schemas/TotalInvested",
            "description": "Summary of all invested funds breakdown"
          },
          "live_profit": {
            "$ref": "#/components/schemas/LiveProfit",
            "description": "Current live profit/loss information for active picks"
          },
          "exit_profit": {
            "$ref": "#/components/schemas/ExitProfit",
            "description": "Profit information from positions closed before resolution"
          },
          "potential_profit": {
            "$ref": "#/components/schemas/PotentialProfit",
            "description": "Potential profit if all active positions win"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Event ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Event name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Event description"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Event start date"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "Event logo URL"
          },
          "take_profit": {
            "type": "integer",
            "title": "Take Profit",
            "description": "Quantity of all take profit orders"
          },
          "stop_loss": {
            "type": "integer",
            "title": "Stop Loss",
            "description": "Quantity of all stop loss orders"
          },
          "auto_cancel": {
            "type": "integer",
            "title": "Auto Cancel",
            "description": "Quantity of all auto cancel orders"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Labels"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          },
          "trading_volume": {
            "type": "integer",
            "title": "Trading Volume"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "category_logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Logo Url"
          },
          "topic": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TopicShortResponseDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "total_invested",
          "live_profit",
          "exit_profit",
          "potential_profit",
          "id",
          "name",
          "description",
          "start_date",
          "take_profit",
          "stop_loss",
          "auto_cancel",
          "is_favorite",
          "trading_volume",
          "category_name"
        ],
        "title": "PortfolioEventSearchSchema"
      },
      "PortfolioOrderSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Event start date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "side": {
            "$ref": "#/components/schemas/OrderSideEnum"
          },
          "type": {
            "$ref": "#/components/schemas/OrderKindEnum"
          },
          "requested_items_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested Items Quantity"
          },
          "executed_items_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Executed Items Quantity"
          },
          "requested_max_inv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested Max Inv"
          },
          "executed_max_inv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Executed Max Inv"
          },
          "investment": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Investment"
          },
          "invested": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invested"
          },
          "current_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Value"
          },
          "live_profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Profit"
          },
          "auto_cancel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoCancelSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "stop_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderTriggerSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "take_profit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderTriggerSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "slippage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slippage"
          },
          "selling_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selling Price"
          },
          "potential_profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Potential Profit"
          },
          "avg_exit_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Exit Price"
          },
          "unfilled": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unfilled"
          },
          "matched_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matched Quantity"
          },
          "matching": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MarketOrderTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profit"
          },
          "cancelled": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CancelTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "start_date",
          "end_date",
          "side",
          "type"
        ],
        "title": "PortfolioOrderSchema"
      },
      "PortfolioOrdersSideStatsDTO": {
        "properties": {
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "avg_bought_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bought Price"
          },
          "investment": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Investment"
          },
          "current_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Value"
          },
          "current_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Price"
          },
          "live_profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Profit"
          },
          "avg_exited_price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Exited Price"
          },
          "profit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profit"
          }
        },
        "type": "object",
        "title": "PortfolioOrdersSideStatsDTO"
      },
      "PotentialProfit": {
        "properties": {
          "potential_profit": {
            "type": "integer",
            "title": "Potential Profit"
          },
          "investment": {
            "type": "integer",
            "title": "Investment",
            "description": "Total amount invested in active positions"
          },
          "estimated_value": {
            "type": "integer",
            "title": "Estimated Value",
            "description": "Estimated value if all positions win"
          }
        },
        "type": "object",
        "required": [
          "potential_profit",
          "investment",
          "estimated_value"
        ],
        "title": "PotentialProfit"
      },
      "ProbabilitySchema": {
        "properties": {
          "side": {
            "type": "string",
            "title": "Side"
          },
          "probability": {
            "type": "number",
            "title": "Probability"
          }
        },
        "type": "object",
        "required": [
          "side",
          "probability"
        ],
        "title": "ProbabilitySchema"
      },
      "ProfileDTO": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "examples": [
              "johny"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "John Smith"
            ]
          },
          "avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar",
            "examples": [
              "https://example.com/avatar.jpg"
            ]
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "examples": [
              "Johny the trader"
            ]
          },
          "is_following": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Following"
          },
          "cell_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cell Phone",
            "examples": [
              "1234567890"
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "examples": [
              "johnsmith@gmail.com"
            ]
          },
          "followers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Followers"
          },
          "following": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Following"
          }
        },
        "type": "object",
        "required": [
          "username",
          "name"
        ],
        "title": "ProfileDTO"
      },
      "ProfileUpdateRequestDTO": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "examples": [
              "John Smith"
            ]
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "examples": [
              "johny"
            ]
          },
          "cell_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cell Phone",
            "examples": [
              "+7 800 555 35 35"
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "examples": [
              "johnsmith@gmail.com"
            ]
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "examples": [
              "Tell the world about yourself"
            ]
          }
        },
        "type": "object",
        "title": "ProfileUpdateRequestDTO"
      },
      "ReferralCodeRequestDTO": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "ReferralCodeRequestDTO"
      },
      "ReferralDTO": {
        "properties": {
          "invite_amount": {
            "type": "integer",
            "title": "Invite Amount"
          },
          "earnings_amount": {
            "type": "integer",
            "title": "Earnings Amount"
          },
          "invited": {
            "type": "integer",
            "title": "Invited"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "limit": {
            "type": "boolean",
            "title": "Limit"
          },
          "limit_reset_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Reset At"
          }
        },
        "type": "object",
        "required": [
          "invite_amount",
          "earnings_amount",
          "invited",
          "code",
          "limit",
          "limit_reset_at"
        ],
        "title": "ReferralDTO"
      },
      "ReferralHistoryDTO": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "payment_type": {
            "type": "string",
            "title": "Payment Type"
          },
          "promo": {
            "type": "integer",
            "title": "Promo"
          }
        },
        "type": "object",
        "required": [
          "date",
          "username",
          "payment_type",
          "promo"
        ],
        "title": "ReferralHistoryDTO"
      },
      "RefreshTokenRequestDTO": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequestDTO"
      },
      "ReviewResultRequestDTO": {
        "properties": {
          "reviewAnswer": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "GREEN",
                  "RED"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewanswer"
          },
          "moderationComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moderationcomment"
          },
          "clientComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clientcomment"
          },
          "reviewRejectType": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "FINAL",
                  "RETRY"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewrejecttype"
          },
          "rejectLabels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejectlabels"
          },
          "buttonIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttonids"
          }
        },
        "type": "object",
        "title": "ReviewResultRequestDTO"
      },
      "SDKTokenDTO": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "SDKTokenDTO"
      },
      "ShareHolderDTO": {
        "properties": {
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "user_name",
          "amount"
        ],
        "title": "ShareHolderDTO"
      },
      "SortingOptionsDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "SortingOptionsDTO"
      },
      "SubCategoriesDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "SubCategoriesDTO"
      },
      "SuccessResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "Ok"
          }
        },
        "type": "object",
        "title": "SuccessResponse"
      },
      "SumsubWebhookRequestDTO": {
        "properties": {
          "applicantId": {
            "type": "string",
            "title": "Applicantid"
          },
          "externalUserId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externaluserid"
          },
          "inspectionId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inspectionid"
          },
          "correlationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlationid"
          },
          "clientId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clientid"
          },
          "type": {
            "$ref": "#/components/schemas/SumsubWebhookTypeEnum"
          },
          "levelName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Levelname"
          },
          "applicantType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applicanttype"
          },
          "sandboxMode": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sandboxmode"
          },
          "reviewStatus": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pending",
                  "completed",
                  "onHold",
                  "awaitingUser"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewstatus"
          },
          "reviewMode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewmode"
          },
          "createdAtMs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdatms"
          },
          "reviewResult": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewResultRequestDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "applicantId",
          "type"
        ],
        "title": "SumsubWebhookRequestDTO",
        "description": "https://docs.sumsub.com/docs/user-verification-webhooks#applicantonhold"
      },
      "SumsubWebhookTypeEnum": {
        "type": "string",
        "enum": [
          "applicantPending",
          "applicantReviewed",
          "applicantOnHold",
          "applicantAwaitingUser"
        ],
        "title": "SumsubWebhookTypeEnum"
      },
      "TakeProfitDTO": {
        "properties": {
          "price": {
            "type": "integer",
            "title": "Price",
            "description": "Target price at which to trigger take-profit or stop-loss"
          }
        },
        "type": "object",
        "required": [
          "price"
        ],
        "title": "TakeProfitDTO"
      },
      "TimeLimitRequestDTO": {
        "properties": {
          "value": {
            "type": "integer",
            "title": "Value",
            "description": "Duration in seconds"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          }
        },
        "type": "object",
        "required": [
          "value",
          "is_enabled"
        ],
        "title": "TimeLimitRequestDTO"
      },
      "TimeLimitResponseDTO": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "Duration in seconds"
          },
          "max_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Value",
            "description": "Duration in seconds"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          }
        },
        "type": "object",
        "required": [
          "is_enabled"
        ],
        "title": "TimeLimitResponseDTO"
      },
      "TopHoldersResponseDTO": {
        "properties": {
          "yes": {
            "items": {
              "$ref": "#/components/schemas/ShareHolderDTO"
            },
            "type": "array",
            "title": "Yes"
          },
          "no": {
            "items": {
              "$ref": "#/components/schemas/ShareHolderDTO"
            },
            "type": "array",
            "title": "No"
          }
        },
        "type": "object",
        "required": [
          "yes",
          "no"
        ],
        "title": "TopHoldersResponseDTO"
      },
      "TopicFavoriteRequestDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "examples": [
              "P2"
            ]
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "TopicFavoriteRequestDTO"
      },
      "TopicResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "banner_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Banner Url"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "category_logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Logo Url"
          },
          "sub_categories": {
            "items": {
              "$ref": "#/components/schemas/SubCategoriesDTO"
            },
            "type": "array",
            "title": "Sub Categories"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "category_name",
          "sub_categories",
          "start_date"
        ],
        "title": "TopicResponseDTO"
      },
      "TopicSearchResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "category_logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Logo Url"
          },
          "sub_categories": {
            "items": {
              "$ref": "#/components/schemas/SubCategoriesDTO"
            },
            "type": "array",
            "title": "Sub Categories"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "is_live": {
            "type": "boolean",
            "title": "Is Live"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "short_name",
          "category_name",
          "sub_categories",
          "start_date",
          "is_live",
          "is_favorite"
        ],
        "title": "TopicSearchResponseDTO"
      },
      "TopicSectionsDTO": {
        "properties": {
          "sections": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sections"
          }
        },
        "type": "object",
        "title": "TopicSectionsDTO"
      },
      "TopicShortResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "TopicShortResponseDTO"
      },
      "TotalInvested": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total amount of funds invested in events"
          },
          "matched": {
            "$ref": "#/components/schemas/MatchedFunds",
            "description": "Breakdown of funds in matched orders"
          },
          "unmatched": {
            "$ref": "#/components/schemas/UnmatchedFunds",
            "description": "Breakdown of funds in unmatched orders"
          }
        },
        "type": "object",
        "required": [
          "total",
          "matched",
          "unmatched"
        ],
        "title": "TotalInvested"
      },
      "TransactionDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "real_amount": {
            "type": "integer",
            "title": "Real Amount"
          },
          "promo_amount": {
            "type": "integer",
            "title": "Promo Amount"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "related_entity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EntityTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "related_entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Id"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "payment_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "meta": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "id",
          "real_amount",
          "promo_amount",
          "created_at",
          "related_entity"
        ],
        "title": "TransactionDTO"
      },
      "TransactionFilterEnum": {
        "type": "string",
        "enum": [
          "all",
          "credit",
          "debit",
          "coins"
        ],
        "title": "TransactionFilterEnum"
      },
      "TriggerTypeEnum": {
        "type": "string",
        "enum": [
          "stop_loss",
          "take_profit"
        ],
        "title": "TriggerTypeEnum"
      },
      "UnmatchedFunds": {
        "properties": {
          "real": {
            "type": "integer",
            "title": "Real",
            "description": "Real funds held for unmatched orders"
          },
          "promo": {
            "type": "integer",
            "title": "Promo",
            "description": "Bonus funds held for unmatched orders"
          },
          "unmatched": {
            "type": "integer",
            "title": "Unmatched",
            "description": "Total amount of funds held for unmatched orders"
          }
        },
        "type": "object",
        "required": [
          "real",
          "promo",
          "unmatched"
        ],
        "title": "UnmatchedFunds"
      },
      "UserAdminResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "cell_phone": {
            "type": "string",
            "title": "Cell Phone"
          },
          "avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "real_funds": {
            "type": "integer",
            "title": "Real Funds"
          },
          "promo_funds": {
            "type": "integer",
            "title": "Promo Funds"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "name",
          "cell_phone",
          "avatar",
          "email",
          "country",
          "is_verified",
          "is_admin",
          "real_funds",
          "promo_funds"
        ],
        "title": "UserAdminResponseDTO"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerificationTokenDTO": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "otp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Otp"
          }
        },
        "type": "object",
        "required": [
          "token",
          "expires_at"
        ],
        "title": "VerificationTokenDTO",
        "examples": [
          {
            "expires_at": "2025-07-12T22:05:56.268Z",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNzJlODJiMC04YWMzLTQ4OTgtOGJmNi04ZmNkMzY3ZDY2MTUiLCJpc3MiOiJ5b24tYXV0aCIsImF1ZCI6Inlvbi1hdXRoIiwidG9rZW5fdHlwZSI6InZlcmlmaWNhdGlvbl90b2tlbiIsImp0aSI6ImIyNDkyODIzLWJmZGYtNGYwNS1hNzg2LTQzNjQyZTdlNWQzYiIsImlhdCI6MTc1MjM1ODEzNCwiZXhwIjoxNzUyMzU4MjU0fQ.mAGdAWl0G2hlLZAmx7lOXHnPA99t9bGsUlWuxMWw1QQ"
          }
        ]
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
